"""
# 짝수 홀수 판
a = int(input())

if a % 2 == 0:
    print("짝수입니다.")
else:
    print("홀수입니다.")

"""
"""

# for 문으로 별 찍기.

for i in range(1, 7):
    print("*"*i)


# for 문으로 역으로 별 찍기.

for i in range(6, 0, -1):
    print("*"*i)
"""
"""

# while 문으로 별찍기.

i = 0
while i < 6:
    i = i+1
    print("*"*i)
"""
"""

# 삽입 정렬.

i = 0
a = [9, 4, 2, 1, 8]
b = a[i]

for i in range(1, 5):
    for j in range(i, 0, -1):
        if a[j-1] > a[j]:
            a[j-1], a[j] = a[j], a[j-1]

print(a)
"""
"""
# 함수 정리 버전.

i = 0
a = [9, 4, 2, 1, 8]
b = a[i]


def change_index(a, i, j):

    for j in range(i, 0, -1):
        if a[j-1] > a[j]:
            a[j-1], a[j] = a[j], a[j-1]

    return a


for i in range(1, 5):
    change_index(a, i, 0)
print(a)
"""

import pygame

pygame.init()

display_width = 800
display_height = 800

def car(carImg, x, y):
    gameDisplay.blit(carImg, (x, y))


def text_object(text, font):
    textSurface = font.render(text, True, black)
    return textSurface, textSurface.get_rect()


def message_display(text):
    largeText = pygame.font.Font('freesansbold.ttf', 115)
    TextSurf, TextRect = text_object(text, largeText)
    TextRect.center = ((display_width/2),(display_height/2))
    gameDisplay.blit(TextSurf, TextRect)

    pygame.display.update()


def crash():
    message_display('You Crashed')



gameDisplay = pygame.display.set_mode((display_width, display_height))
pygame.display.set_caption('race')

black = (0, 0, 0)
white = (255, 255, 255)

clock = pygame.time.Clock()
crashed = False
carImg = pygame.image.load('racecar.png')
car_width = 52
car_height = 80


def game_loop():
    x = (display_width * 0.45)
    y = (display_height * 0.8)
    x_change = 0
    y_change = 0
    crashed = False
    while not crashed:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                crashed = True

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x_change = -5
                elif event.key == pygame.K_RIGHT:
                    x_change = 5
                elif event.key == pygame.K_UP:
                    y_change = -5
                elif event.key == pygame.K_DOWN:
                    y_change = 5

            if event.type == pygame.KEYUP:
                if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT or event.key == pygame.K_UP or event.key == pygame.K_DOWN:
                    x_change = 0
                    y_change = 0
        x += x_change
        y += y_change
        gameDisplay.fill(white)
        car(carImg, x, y)
        if x > display_width - car_width or x < 0:
            crashed = True
            crash()

        if y > display_height - car_height or y < 0:
            crashed = True
            crash()


        pygame.display.update()
        clock.tick(60)
