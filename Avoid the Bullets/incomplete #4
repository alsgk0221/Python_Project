import pygame
import random
import time

pygame.init()

# 색상 정의
BLACK = (0, 0, 0)
GRAY = (20, 20, 20)
WHITE = (255, 255, 255)
BLUE = (0, 0, 255)
GREEN = (0, 255, 0)
RED = (255, 0, 0)
YELLOW = (255, 255, 0)

# 화면 크기 설정
size = (1280, 720)  # 1280 * 720
screen = pygame.display.set_mode(size)

# 게임 제목 설정
pygame.display.set_caption("Avoid the Bullets")

# 프레임을 정하기 위한 변수
clock = pygame.time.Clock()

player_x = 640
player_y = 360
width = 20
height = 20
count = 0

moveSpeed = 10

onGame = True
done = False
Ready = True
shield = False
skill = 0
shield_cnt = 0

# 움직임 구현 함수 (방향키)
def move(li):
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT] and li[0] > 0:
        li[0] -= moveSpeed

    if keys[pygame.K_RIGHT] and li[0] < 1280 - height :
        li[0] += moveSpeed

    if keys[pygame.K_UP] and li[1] > 0:
        li[1] -= moveSpeed

    if keys[pygame.K_DOWN] and li[1] < 720 - width:
        li[1] += moveSpeed
    return li[0], li[1]  # li[0]은 x좌표, li[1]은 y좌표

def text(size, lines, color, text_x, text_y):
    myFont = pygame.font.SysFont("arial", size, True, False)
    text_Title = myFont.render(lines, True, color)
    text_Rect = text_Title.get_rect()
    text_Rect.centerx = round(text_x)
    text_Rect.y = text_y
    screen.blit(text_Title, text_Rect)

class Bullits:
    def __init__(self, x, y):
        self.pos_x = x
        self.pos_y = y
        self.x_speed = random.uniform(1, 5)
        self.y_speed = random.uniform(1, 5)
        self.x_speed += 0.5
        self.y_speed += 0.5

    def draw(self):
        self.rect = pygame.draw.rect(screen, GREEN, (self.pos_x, self.pos_y, width, height))

    def move(self):
        self.pos_x += self.x_speed
        self.pos_y += self.y_speed

    def wall_check(self):
        if self.pos_x + self.x_speed > 1280 - width or self.pos_x + self.x_speed < height:
            self.x_speed = -self.x_speed
        if self.pos_y + self.y_speed > 720 - width or self.pos_y + self.y_speed < height:
            self.y_speed = -self.y_speed

    def collision_check(self):
        if self.rect.top < player.bottom and player.top < self.rect.bottom and player.left < self.rect.right and self.rect.left < player.right:
            if shield == False:
                return True
        else:
            return False

    def check_all(self):
        self.draw()
        self.move()
        self.wall_check()
        res = self.collision_check()
        if res == True:
            return True
        else:
            return False


enemy_1 = Bullits(random.randrange(10, 1270), random.randrange(10, 710))
enemy_2 = Bullits(random.randrange(10, 1270), random.randrange(10, 710))
enemy_3 = Bullits(random.randrange(10, 1270), random.randrange(10, 710))
enemy_4 = Bullits(random.randrange(10, 1270), random.randrange(10, 710))
enemy_5 = Bullits(random.randrange(10, 1270), random.randrange(10, 710))
enemy_6 = Bullits(random.randrange(10, 1270), random.randrange(10, 710))

print("press space bar to use shield.")

while not done:
    # 초당 10프레임
    count += 1
    shield_cnt += 1
    clock.tick(60)
    start_ticks = pygame.time.get_ticks()

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            done = True
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_SPACE:
                skill = int(skill)
                if skill > 0:
                    skill -= 1
                    shield = True
                    shield_cnt = 0

    currLocation = [player_x, player_y]
    player_x, player_y = move(currLocation)

    screen.fill(GRAY)
    if shield == True:
        player = pygame.draw.rect(screen, YELLOW, (player_x, player_y, width, height))
        text(30, "Shield On", YELLOW, 640, 10)
        # myFont = pygame.font.SysFont("arial", 30, True, False)
        # text_Title = myFont.render("Shield On", True, YELLOW)
        # text_Rect = text_Title.get_rect()
        # text_Rect.centerx = round(640)
        # text_Rect.y = 10
        # screen.blit(text_Title, text_Rect)
    else:
        player = pygame.draw.rect(screen, RED, (player_x, player_y, width, height))

    temp1 = enemy_1.check_all()
    temp2 = enemy_2.check_all()
    temp3 = enemy_3.check_all()
    temp4 = enemy_4.check_all()
    temp5 = enemy_5.check_all()
    temp6 = enemy_6.check_all()

    if temp1==True or temp2==True or temp3==True or temp4==True or temp5==True or temp6==True or \
            player_x == 0 or player_x == 1260 or player_y == 0 or player_y == 700:
        screen.fill(BLACK)
        text(60, "GAME OVER", WHITE, 630, 300)
        # myFont = pygame.font.SysFont("arial", 60, True, False)
        # text_Title = myFont.render("GAME OVER", True, WHITE)
        # text_Rect = text_Title.get_rect()
        # text_Rect.centerx = round(1260 / 2)
        # text_Rect.y = 300
        # screen.blit(text_Title, text_Rect)

        done = True

    time_text = str(start_ticks // 1000)
    text(30, "Score : " + time_text, WHITE, 1100, 10)
    #myFont = pygame.font.SysFont("arial", 30, True, False)
    #text_Title = myFont.render("Score : " + time_text, True, WHITE)
    #text_Rect = text_Title.get_rect()
    #text_Rect.centerx = round(1100)
    #text_Rect.y = 10
    #screen.blit(text_Title, text_Rect)
    time_text = int(time_text)
    skill = int(skill)
    if time_text % 2 == 0:
        if count > 100:
            skill += 1
            count = 0

    skill = str(skill)
    text(30, "Shield : " + skill, WHITE, 1100, 35)
    #myFont = pygame.font.SysFont("arial", 30, True, False)
    #text_Title = myFont.render("Shield : " + skill, True, WHITE)
    #text_Rect = text_Title.get_rect()
    #text_Rect.centerx = round(1100)
    #text_Rect.y = 35
    #screen.blit(text_Title, text_Rect)

    if shield_cnt > 250:
        shield = False

    if done:
        pygame.display.flip()
        pygame.time.delay(2 * 1000)  # 1 second == 1000 milliseconds

    pygame.display.flip()

pygame.quit()


# 기본 게임 진행 구현
# Game Over 화면 구현
# 배경 음악 추가
# 화면에 점수 표시
